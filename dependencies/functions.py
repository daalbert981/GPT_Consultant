def generate_agent_system_prompts(spawned_agents):    agents = []    for function_call in spawned_agents["function_calls"]:        #print("\n" + function_call["arguments"]["title"] + ": " + function_call["arguments"]["overview"])        role = function_call["arguments"]["title"]        instructions = function_call["arguments"]["overview"]        agents.append(f"You are a {role}. {instructions}. Your task is to develop high quality, non-trivial solutions for our client and their task or problem.\                      Structure your response so that you cover everything you want to cover within 400 words max.")    return(agents)def report_generator(experts_list, question_prompt, revised_proposals, exec_summary, name, project_draft=None):    import markdown    import pypandoc    import os    #import webbrowser    # Convert expert roles to markdown format    expert_roles = [f"*__{agent['role']}__*" for agent in experts_list]    expert_roles_str = ", ".join(expert_roles)        # Start with the client's question    report_content = f"# Client's Question\n{question_prompt}\n\n"        # Introduction to the team of experts    report_content += f"## The Team of Experts\nI assembled a team comprised of the following experts: {expert_roles_str}.\n\n"        # Executive Summary    report_content += f"## Executive Summary & Integrated Recommendation\n{exec_summary['text']}\n\n"        # Detailed responses from each expert    detailed_responses = "\n\n".join([f"### {experts_list[i]['role']}\n{revised_proposals[i]['text']}" for i in range(len(experts_list))])    report_content += f"## Detailed Responses\n{detailed_responses}\n"        if project_draft:        report_content += f"\n\n## Project Outline (DRAFT ONLY)\n{project_draft}\n"        # Save the formatted text to a .md file    md_file_path = os.path.join("output", f"{name}.md")    with open(md_file_path, 'w') as md_file:        md_file.write(report_content)        # Convert Markdown to PDF    output_pdf_path = os.path.join("output", f"{name}.pdf")    pypandoc.convert_file(md_file_path, 'pdf', outputfile=output_pdf_path, extra_args=['-V', 'geometry:margin=1in'])    #webbrowser.open_new(output_pdf_path)    os.system(f"open {output_pdf_path}")